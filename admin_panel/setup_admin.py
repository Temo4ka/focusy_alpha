#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Django –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ –¥–ª—è FOCUSY
"""

import os
import sys
import subprocess
from pathlib import Path

def create_env_file():
    """–°–æ–∑–¥–∞–µ—Ç .env —Ñ–∞–π–ª —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏"""
    env_content = """# Django settings
DJANGO_SECRET_KEY=django-insecure-focusy-admin-panel-secret-key-change-in-production
DEBUG=True

# Database settings - –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç—É –∂–µ –ë–î —á—Ç–æ –∏ Node.js API
DB_NAME=focusy_db
DB_USER=postgres
DB_PASSWORD=password
DB_HOST=localhost
DB_PORT=5432
"""
    
    env_path = Path('.env')
    if env_path.exists():
        print("‚ö†Ô∏è  –§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –•–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å? (y/n): ", end="")
        if input().lower() != 'y':
            return
    
    with open(env_path, 'w', encoding='utf-8') as f:
        f.write(env_content)
    print("‚úÖ –§–∞–π–ª .env —Å–æ–∑–¥–∞–Ω")

def install_dependencies():
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ Python"""
    print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    try:
        subprocess.run([sys.executable, '-m', 'pip', 'install', '-r', 'requirements.txt'], 
                      check=True, capture_output=True, text=True)
        print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π: {e}")
        print("–í—ã–≤–æ–¥:", e.stdout)
        print("–û—à–∏–±–∫–∏:", e.stderr)
        return False
    return True

def run_migrations():
    """–ü—Ä–∏–º–µ–Ω—è–µ—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ Django"""
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π...")
    try:
        # –°–æ–∑–¥–∞–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
        subprocess.run([sys.executable, 'manage.py', 'makemigrations'], 
                      check=True, capture_output=True, text=True)
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã")
        
        # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
        subprocess.run([sys.executable, 'manage.py', 'migrate'], 
                      check=True, capture_output=True, text=True)
        print("‚úÖ –ú–∏–≥—Ä–∞—Ü–∏–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã")
    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–π: {e}")
        print("–í—ã–≤–æ–¥:", e.stdout)
        print("–û—à–∏–±–∫–∏:", e.stderr)
        return False
    return True

def create_superuser():
    """–°–æ–∑–¥–∞–µ—Ç —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∞–¥–º–∏–Ω–∫–∏"""
    print("\nüë§ –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞")
    print("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ –≤ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å:")
    
    username = input("–õ–æ–≥–∏–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ").strip()
    if not username:
        username = "admin"
        print(f"–ò—Å–ø–æ–ª—å–∑—É—é –ª–æ–≥–∏–Ω –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {username}")
    
    email = input("Email –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ").strip()
    if not email:
        email = "admin@focusy.local"
        print(f"–ò—Å–ø–æ–ª—å–∑—É—é email –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {email}")
    
    # –°–æ–∑–¥–∞–µ–º —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
    from django.core.management import execute_from_command_line
    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
    
    import django
    django.setup()
    
    from django.contrib.auth.models import User
    
    if User.objects.filter(username=username).exists():
        print(f"‚ö†Ô∏è  –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        return username
    
    password = input("–ü–∞—Ä–æ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: ").strip()
    if not password:
        password = "admin123"
        print("‚ö†Ô∏è  –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –ø–∞—Ä–æ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: admin123")
    
    User.objects.create_superuser(username=username, email=email, password=password)
    print(f"‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {username} —Å–æ–∑–¥–∞–Ω")
    return username

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏ FOCUSY")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not Path('manage.py').exists():
        print("‚ùå –û—à–∏–±–∫–∞: manage.py –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –ø–∞–ø–∫–∏ admin_panel/")
        sys.exit(1)
    
    # –®–∞–≥ 1: –°–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞
    print("\n1Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    create_env_file()
    
    # –®–∞–≥ 2: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    print("\n2Ô∏è‚É£ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
    if not install_dependencies():
        sys.exit(1)
    
    # –®–∞–≥ 3: –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–≥—Ä–∞—Ü–∏–π
    print("\n3Ô∏è‚É£ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    if not run_migrations():
        print("‚ùå –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL –≤ .env —Ñ–∞–π–ª–µ")
        sys.exit(1)
    
    # –®–∞–≥ 4: –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    print("\n4Ô∏è‚É£ –°–æ–∑–¥–∞–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞...")
    try:
        admin_username = create_superuser()
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {e}")
        sys.exit(1)
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    print("\n" + "=" * 50)
    print("üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    print("\nüìã –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏:")
    print("   python manage.py runserver 8001")
    print("\nüåê –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É:")
    print("   http://localhost:8001/admin/")
    print("\nüîë –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:")
    print(f"   –õ–æ–≥–∏–Ω: {admin_username}")
    print("   –ü–∞—Ä–æ–ª—å: (–∫–æ—Ç–æ—Ä—ã–π –≤—ã –≤–≤–µ–ª–∏)")
    print("\nüìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É:")
    print("   http://localhost:8001/analytics/")

if __name__ == '__main__':
    main()
